<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ShelfDAO">
    <select id="getShelves" resultMap="getShelves">
        SELECT TR.totalOfRecord, SH.ShelfId, SH.ShelfName, SH.Description, SH.UpdatedTime, SH.StatusId, SH.NumberStacks , STT.StatusName
        FROM tblShelf SH
        JOIN tblStore ST ON SH.StoreId = ST.StoreId
        <if test="statusId != 0">
            AND SH.StatusId = #{statusId}
        </if>
        AND ST.StoreId = #{storeId}
        JOIN tblStatus STT ON SH.StatusId = STT.StatusId,
        (SELECT COUNT(SH.ShelfId) AS totalOfRecord
        FROM tblShelf SH
        JOIN tblStore ST ON SH.StoreId = ST.StoreId
        <if test="statusId != 0">
            AND SH.StatusId = #{statusId}
        </if>
        AND ST.StoreId = #{storeId}
        JOIN tblStatus STT ON SH.StatusId = STT.StatusId
        <if test="shelfName != null">
            WHERE SH.ShelfName LIKE '%' #{shelfName} '%'
        </if>
            ) AS TR
        <if test="shelfName != null">
            WHERE SH.ShelfName LIKE '%' #{shelfName} '%'
        </if>
        ORDER BY SH.UpdatedTime DESC
        LIMIT
        #{offSet},
        #{fetchNext}
    </select>

    <select id="getShelfDetail" resultMap="getShelfDetail">
        SELECT SH.ShelfId,
               SH.ShelfName,
               SH.Description,
               SH.NumberStacks,
               SH.CreatedTime,
               SH.UpdatedTime,
               SH.ReasonInactive,
               STT.StatusID,
               STT.StatusName,
               CM.CameraId,
               CM.CameraName,
               CM.MACAddress,
               CM.IPAddress,
               CM.RTSPString,
               CM.ImageURL,
               CM.CreatedTime AS CMCreatedTime,
               CM.UpdatedTime AS CMUpdatedTime
        FROM tblShelf SH
                 JOIN tblStatus STT ON SH.StatusId = STT.StatusId
                 LEFT JOIN tblShelfCameraMapping SCM ON SH.ShelfId = SCM.ShelfId AND SCM.StatusId = 1
                 LEFT JOIN tblCamera CM ON SCM.CameraId = CM.CameraId
        WHERE SH.ShelfId = #{shelfId} AND SH.StoreId = #{storeId}
    </select>
    <update id="updateShelf">
        UPDATE tblShelf
        SET ShelfName = #{shelfName},
            Description = #{description},
            UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        WHERE ShelfId = #{shelfId}
    </update>
    <insert id="createShelf" parameterType="ShelfDTO">
        <selectKey keyProperty="shelfId" resultType="string" order="BEFORE">
            SELECT UUID() AS shelfId LIMIT 1
        </selectKey>
         INSERT INTO tblShelf(shelfId, shelfName, Description, numberStacks, createdTime, UpdatedTime, statusId, StoreId)
         VALUES (#{shelfId},
           #{shelfName},
           #{description},
           #{numberOfStack},
           convert_tz(now(),
           @@session.time_zone,#{createdTime}),
           convert_tz(now(),
           @@session.time_zone,
           #{createdTime}),
           #{statusId},
           #{storeId})
    </insert>
    <insert id="createStacks">
        INSERT INTO tblStack(Position, CreatedTime, UpdatedTime, ShelfId, StatusId) VALUES
        <foreach item="item" collection="list" separator=",">
            (#{item.position}, convert_tz(now(),@@session.time_zone,#{item.createdTime}), convert_tz(now(),@@session.time_zone,#{item.createdTime}), #{item.shelfId}, #{item.statusId})
        </foreach>
    </insert>
    <select id="getStatusId" resultMap="getStatusId">
        SELECT DISTINCT(SH1.ShelfId), SH1.StatusId, SH2.totalOfRecord
        FROM tblShelf SH1,
        (SELECT COUNT(ST.StackId) AS totalOfRecord
        FROM  tblStack ST
            JOIN tblShelf SH ON ST.ShelfId = SH.ShelfId AND ST.ShelfId = #{shelfId}
        <if test="statusId == 2">
            AND ST.StatusId != 2
        </if>
            JOIN tblStore STR ON SH.StoreId = STR.StoreId AND STR.StoreId = #{storeId}) SH2
        WHERE SH1.ShelfId = #{shelfId} AND SH1.StoreId = #{storeId}
    </select>
    <update id="updateShelfStatus">
        UPDATE tblShelf SET StatusId = #{statusId}, UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        <if test="statusId == 2">
            , ReasonInactive = #{reasonInactive}
        </if>
        WHERE ShelfId = #{shelfId}
    </update>

<!--    check business change shelf camera-->
    <select id="getShelfStatus" resultMap="getStatus">
        SELECT StatusId FROM tblShelf WHERE ShelfId = #{shelfId} AND StatusId != 2 AND StoreId = #{storeId}
    </select>
    <select id="getCameraStatus" resultMap="getStatusCam">
        SELECT StatusId,TypeDetect FROM tblCamera WHERE cameraId = #{cameraId} AND StatusId != 2 AND typeDetect = 1
    </select>
    <select id="getShelfCameraMappingStatus" resultMap="getStatus">
        SELECT StatusId FROM tblShelfCameraMapping
        WHERE ShelfId = #{shelfId} AND cameraId = #{cameraId} AND StatusId = 1
    </select>
    <select id="countCameraByShelfId" resultType="int">
        SELECT COUNT(TSCM.CameraId)
        FROM tblShelfCameraMapping TSCM
        WHERE TSCM.ShelfId = #{shelfId}
          AND TSCM.StatusId = 1
    </select>
<!-- add shelf camera into shelf   -->
    <update id="createShelfCameraOnShelf" flushCache="true">
        UPDATE tblShelf
        SET StatusId = 1,
            UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        WHERE ShelfId = #{shelfId}
    </update>
    <update id="createShelfCameraOnCamera" flushCache="true">
        UPDATE tblCamera
        SET StatusId = 1,
            UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        WHERE CameraId = #{cameraId}
    </update>
    <insert id="createShelfCameraOnMapping" flushCache="true">
        INSERT INTO tblShelfCameraMapping(AddedTime, ShelfId, CameraId, StatusId)
            VALUE(convert_tz(now(),@@session.time_zone,#{updatedTime}), #{shelfId}, #{cameraId}, 1)
    </insert>
<!--    Remove shelfCamera from shelf-->
    <update id="removeShelfCameraFromShelf" flushCache="true">
        UPDATE tblShelf
        SET StatusId = #{statusId},
            UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        WHERE ShelfId = #{shelfId}
    </update>
    <update id="removeShelfCameraFromMapping" flushCache="true">
        UPDATE tblShelfCameraMapping
        SET RemovedTime = convert_tz(now(),@@session.time_zone,#{updatedTime}),
        StatusId = 2
        WHERE ShelfId = #{shelfId}
        AND CameraId = #{cameraId}
        AND StatusId = 1
    </update>
    <update id="removeShelfCameraFromCamera" flushCache="true">
        UPDATE tblCamera
        SET StatusId = 3,
            UpdatedTime = convert_tz(now(),@@session.time_zone,#{updatedTime})
        WHERE CameraId = #{cameraId}
    </update>
    <resultMap id="getShelves" type="ResponseShelfListForm">
        <result property="totalOfRecord" column="totalOfRecord"/>
        <collection property="shelves" ofType="ShelfResponseSupporter">
            <id property="shelfId" column="ShelfId"/>
            <result property="shelfName" column="ShelfName"/>
            <result property="description" column="Description"/>
            <result property="updatedTime" column="UpdatedTime"/>
            <result property="statusId" column="StatusId"/>
            <result property="statusName" column="StatusName"/>
            <result property="numberOfStack" column="NumberStacks"/>
        </collection>
    </resultMap>
    <resultMap id="getShelfDetail" type="ResponseShelfDetailForm">
        <result property="shelfId" column="ShelfId"/>
        <result property="shelfName" column="ShelfName"/>
        <result property="description" column="Description"/>
        <result property="numberOfStack" column="NumberStacks"/>
        <result property="createdTime" column="CreatedTime"/>
        <result property="updatedTime" column="UpdatedTime"/>
        <result property="reasonInactive" column="reasonInactive"/>
        <result property="statusId" column="StatusId"/>
        <result property="statusName" column="StatusName"/>
        <collection property="cameras" ofType="CameraResponseFormSupporter">
            <id property="cameraId" column="CameraId"/>
            <result property="cameraName" column="CameraName"/>
            <result property="ipAddress" column="IPAddress"/>
            <result property="macAddress" column="MACAddress"/>
            <result property="rtspString" column="RTSPString"/>
            <result property="imageURL" column="ImageURL"/>
            <result property="createdTime" column="CMCreatedTime"/>
            <result property="updatedTime" column="CMUpdatedTime"/>
        </collection>
    </resultMap>
    <resultMap id="createShelf" type="ShelfDTO">
        <result property="shelfId" column="shelfId"/>
    </resultMap>
    <resultMap id="getStatusId" type="ShelfDTO">
        <result property="totalOfRecord" column="totalOfRecord"/>
        <result property="shelfId" column="ShelfId"/>
        <result property="statusId" column="StatusId"/>
    </resultMap>
    <resultMap id="getStatus" type="ShelfDTO">
        <result property="statusId" column="StatusId"/>
    </resultMap>
    <resultMap id="getStatusCam" type="ShelfDTO">
        <result property="statusId" column="StatusId"/>
        <result property="typeDetect" column="TypeDetect"/>
    </resultMap>
    <select id="getShelveByStoreId" resultMap="getShelveByStoreId">
        SELECT S.ShelfId,
               S.ShelfName,
               TT.totalOfRecord
        FROM tblShelf S,
             (SELECT COUNT(S.ShelfId) AS totalOfRecord
              FROM tblShelf S
              WHERE S.StoreId = #{storeId}) TT
        WHERE S.StoreId = #{storeId}
    </select>
    <resultMap id="getShelveByStoreId" type="ResponseShelvesByStoreId">
        <result property="totalOfRecord" column="totalOfRecord"/>
        <collection property="shelves" ofType="ShelfSortSupporter">
            <result property="shelfId" column="ShelfId"/>
            <result property="shelfName" column="ShelfName"/>
        </collection>
    </resultMap>
</mapper>